-- üå∏ ‡πÇ‡∏´‡∏•‡∏î Rayfield UI
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
	Name = "Maple Hub",
	LoadingTitle = "Maple Hub Loading...",
	LoadingSubtitle = "by Piphoppat",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = "MapleHub",
		FileName = "MapleConfig"
	},
	KeySystem = false,
})


local AimbotTab = Window:CreateTab("Aimbot", 4483362458)
AimbotTab:CreateSection("Aimbot Settings")

------------------------------------------------------
-- üå∏ Aimbot Core
------------------------------------------------------

pcall(function()
	getgenv().Aimbot.Functions:Exit()
end)

getgenv().Aimbot = {}
local Aimbot = getgenv().Aimbot

local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local Typing, Running = false, false
local Animation = nil

Aimbot.Settings = {
	Enabled = false,
	TeamCheck = false,
	AliveCheck = true,
	WallCheck = false,
	Sensitivity = 0,
	TriggerKey = "MouseButton2",
	Toggle = false,
	LockPart = "Head",
}

Aimbot.FOVSettings = {
	Enabled = true,
	Visible = true,
	Amount = 90,
	Color = Color3.fromRGB(255, 255, 255),
	LockedColor = Color3.fromRGB(255, 70, 70),
	Transparency = 0.5,
	Sides = 70,
	Thickness = 1,
	Filled = false
}

Aimbot.FOVCircle = Drawing.new("Circle")

local function CancelLock()
	Aimbot.Locked = nil
	if Animation then Animation:Cancel() end
	Aimbot.FOVCircle.Color = Aimbot.FOVSettings.Color
end

local function GetClosestPlayer()
	local RequiredDistance = Aimbot.FOVSettings.Amount
	local Closest = nil

	for _, v in ipairs(Players:GetPlayers()) do
		if v ~= LocalPlayer and v.Character and v.Character:FindFirstChild(Aimbot.Settings.LockPart) then
			if Aimbot.Settings.TeamCheck and v.Team == LocalPlayer.Team then continue end
			if Aimbot.Settings.AliveCheck and v.Character:FindFirstChildOfClass("Humanoid").Health <= 0 then continue end

			local Vector, OnScreen = Camera:WorldToViewportPoint(v.Character[Aimbot.Settings.LockPart].Position)
			local Distance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(Vector.X, Vector.Y)).Magnitude

			if Distance < RequiredDistance and OnScreen then
				RequiredDistance = Distance
				Closest = v
			end
		end
	end

	Aimbot.Locked = Closest
end

RunService.RenderStepped:Connect(function()
	if not Aimbot.Settings.Enabled then
		Aimbot.FOVCircle.Visible = false
		return
	end

	local fov = Aimbot.FOVSettings
	Aimbot.FOVCircle.Visible = fov.Enabled and fov.Visible

	if fov.Enabled then
		Aimbot.FOVCircle.Radius = fov.Amount
		Aimbot.FOVCircle.Thickness = fov.Thickness
		Aimbot.FOVCircle.Filled = fov.Filled
		Aimbot.FOVCircle.NumSides = fov.Sides
		Aimbot.FOVCircle.Color = fov.Color
		Aimbot.FOVCircle.Transparency = fov.Transparency
		Aimbot.FOVCircle.Position = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
	end

	if Running and Aimbot.Settings.Enabled then
		GetClosestPlayer()
		if Aimbot.Locked and Aimbot.Locked.Character then
			local targetPos = Aimbot.Locked.Character[Aimbot.Settings.LockPart].Position
			if Aimbot.Settings.Sensitivity > 0 then
				Animation = TweenService:Create(Camera, TweenInfo.new(Aimbot.Settings.Sensitivity, Enum.EasingStyle.Sine), {
					CFrame = CFrame.new(Camera.CFrame.Position, targetPos)
				})
				Animation:Play()
			else
				Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetPos)
			end
			Aimbot.FOVCircle.Color = fov.LockedColor
		else
			CancelLock()
		end
	end
end)

-- üå∏ ‡∏à‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏•‡πá‡∏≠‡∏Ñ‡πÄ‡∏õ‡πâ‡∏≤‡πÅ‡∏ö‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ
UserInputService.InputBegan:Connect(function(input)
	local key = input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode.Name or input.UserInputType.Name
	if key == Aimbot.Settings.TriggerKey then
		Running = true
	end
end)

UserInputService.InputEnded:Connect(function(input)
	local key = input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode.Name or input.UserInputType.Name
	if key == Aimbot.Settings.TriggerKey then
		Running = false
		CancelLock()
	end
end)

------------------------------------------------------
-- üå∏ Rayfield UI ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°
------------------------------------------------------

AimbotTab:CreateDropdown({
	Name = "Aim",
	Options = {"‡∏´‡∏±‡∏ß", "‡∏ï‡∏±‡∏ß"},
	CurrentOption = {"‡∏´‡∏±‡∏ß"},
	Flag = "AimLockPart",
	Callback = function(opt)
		Aimbot.Settings.LockPart = (opt[1] == "‡∏´‡∏±‡∏ß") and "Head" or "HumanoidRootPart"
	end,
})

AimbotTab:CreateToggle({
	Name = "Aimbot",
	CurrentValue = false,
	Flag = "AimbotToggle",
	Callback = function(state)
		Aimbot.Settings.Enabled = state
	end,
})

AimbotTab:CreateToggle({
	Name = "Team Check (‡πÑ‡∏°‡πà‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô)",
	CurrentValue = false,
	Flag = "TeamCheck",
	Callback = function(state)
		Aimbot.Settings.TeamCheck = state
	end,
})

-- üå∏ ‡πÄ‡∏û‡∏¥‡πà‡∏° Dropdown ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏õ‡πâ‡∏≤
AimbotTab:CreateDropdown({
	Name = "Trigger Key (‡∏õ‡∏∏‡πà‡∏°‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏õ‡πâ‡∏≤)",
	Options = {"MouseButton1", "MouseButton2", "E", "Q", "R", "LeftShift"},
	CurrentOption = {"MouseButton2"},
	Flag = "TriggerKey",
	Callback = function(opt)
		Aimbot.Settings.TriggerKey = opt[1]
	end,
})

AimbotTab:CreateSection("FOV Settings")

AimbotTab:CreateToggle({
	Name = "FOV Circle",
	CurrentValue = true,
	Flag = "FOVToggle",
	Callback = function(state)
		Aimbot.FOVSettings.Enabled = state
		Aimbot.FOVSettings.Visible = state -- ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô
	end,
})

AimbotTab:CreateSlider({
	Name = "FOV Size",
	Range = {50, 300},
	Increment = 1,
	CurrentValue = 70,
	Flag = "FOVSize",
	Callback = function(value)
		Aimbot.FOVSettings.Amount = value
	end,
})

local ESPTab = Window:CreateTab("ESP", 4483362458)

------------------------------------------------------
-- üå∏ ESP Core Optimized v3
------------------------------------------------------
getgenv().ESP = {}
local ESP = getgenv().ESP

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

ESP.Settings = {
    Box = false,
    Highlight = false,
    Name = false,
    Health = false,
    Distance = false,
    TeamCheck = false,       -- Toggle ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ó‡∏µ‡∏° ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î
    Color = Color3.fromRGB(255, 255, 255),
}

ESP.Boxes = {}
ESP.Names = {}
ESP.HealthBars = {}
ESP.Distances = {}
ESP.Highlights = {}

-- ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ó‡∏µ‡∏°
local function IsEnemy(player)
    if not LocalPlayer.Team or not player.Team then return true end
    return LocalPlayer.Team ~= player.Team
end

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á ESP ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
local function CreateESP(player)
    if player == LocalPlayer then return end

    if not ESP.Boxes[player] then
        local box = Drawing.new("Square")
        box.Visible = false
        box.Color = ESP.Settings.Color
        box.Thickness = 2
        box.Transparency = 1
        ESP.Boxes[player] = box
    end

    if not ESP.Names[player] then
        local name = Drawing.new("Text")
        name.Visible = false
        name.Color = ESP.Settings.Color
        name.Size = 14
        name.Center = true
        name.Outline = true
        ESP.Names[player] = name
    end

    if not ESP.HealthBars[player] then
        local healthBar = Drawing.new("Line")
        healthBar.Visible = false
        healthBar.Color = Color3.fromRGB(0, 255, 0)
        healthBar.Thickness = 2
        ESP.HealthBars[player] = healthBar
    end

    if not ESP.Distances[player] then
        local distance = Drawing.new("Text")
        distance.Visible = false
        distance.Color = ESP.Settings.Color
        distance.Size = 14
        distance.Center = true
        distance.Outline = true
        ESP.Distances[player] = distance
    end
end

-- ‡∏ã‡πà‡∏≠‡∏ô ESP
local function HideESP(player)
    if ESP.Boxes[player] then ESP.Boxes[player].Visible = false end
    if ESP.Names[player] then ESP.Names[player].Visible = false end
    if ESP.HealthBars[player] then ESP.HealthBars[player].Visible = false end
    if ESP.Distances[player] then ESP.Distances[player].Visible = false end
end

-- Highlight
local function UpdateHighlight(player)
    if player == LocalPlayer then return end
    if ESP.Settings.TeamCheck and not IsEnemy(player) then
        if ESP.Highlights[player] then
            ESP.Highlights[player]:Destroy()
            ESP.Highlights[player] = nil
        end
        return
    end

    local char = player.Character
    if not char then return end

    local highlight = ESP.Highlights[player]

    if ESP.Settings.Highlight then
        if not highlight then
            highlight = Instance.new("Highlight")
            highlight.Name = "ESPHighlight"
            highlight.Adornee = char
            highlight.FillColor = ESP.Settings.Color
            highlight.FillTransparency = 0.5
            highlight.OutlineColor = Color3.fromRGB(0,0,0)
            highlight.OutlineTransparency = 0
            highlight.Parent = char
            ESP.Highlights[player] = highlight
        end
    else
        if highlight then
            highlight:Destroy()
            ESP.Highlights[player] = nil
        end
    end
end

-- Update ESP ‡∏ó‡∏∏‡∏Å‡πÄ‡∏ü‡∏£‡∏°
RunService.RenderStepped:Connect(function()
    for _, player in ipairs(Players:GetPlayers()) do
        if player == LocalPlayer then continue end

        -- ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ó‡∏µ‡∏°‡πÅ‡∏ö‡∏ö toggle
        if ESP.Settings.TeamCheck and not IsEnemy(player) then
            HideESP(player)
            continue
        end

        CreateESP(player)
        UpdateHighlight(player)

        local char = player.Character
        if char and char:FindFirstChild("HumanoidRootPart") and char:FindFirstChildOfClass("Humanoid") then
            local hrp = char.HumanoidRootPart
            local humanoid = char:FindFirstChildOfClass("Humanoid")
            local pos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
            local screenPos = Vector2.new(pos.X, pos.Y)

            if onScreen then
                -- Box
                if ESP.Settings.Box then
                    local baseWidth, baseHeight = 20, 45
                    local distanceScale = 1 / (pos.Z / 20)
                    local scale = math.clamp(distanceScale, 0.8, 1.5)
                    local size = Vector2.new(baseWidth, baseHeight) * scale
                    ESP.Boxes[player].Size = size
                    ESP.Boxes[player].Position = screenPos - size/2
                    ESP.Boxes[player].Visible = true
                else
                    ESP.Boxes[player].Visible = false
                end

                local boxSizeY = ESP.Boxes[player] and ESP.Boxes[player].Size.Y or 45

                -- Name
                if ESP.Settings.Name then
                    ESP.Names[player].Text = player.Name
                    ESP.Names[player].Position = screenPos - Vector2.new(0, boxSizeY/2 + 10)
                    ESP.Names[player].Visible = true
                else
                    ESP.Names[player].Visible = false
                end

                -- Health
                if ESP.Settings.Health then
                    local healthRatio = humanoid.Health/humanoid.MaxHealth
                    local startPos = screenPos - Vector2.new(ESP.Boxes[player].Size.X/2, boxSizeY/2 + 5)
                    local endPos = startPos + Vector2.new(ESP.Boxes[player].Size.X * healthRatio, 0)
                    ESP.HealthBars[player].From = startPos
                    ESP.HealthBars[player].To = endPos
                    ESP.HealthBars[player].Color = Color3.fromRGB(0,255,0)
                    ESP.HealthBars[player].Visible = true
                else
                    ESP.HealthBars[player].Visible = false
                end

                -- Distance
                if ESP.Settings.Distance then
                    local dist = math.floor((hrp.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude)
                    ESP.Distances[player].Text = tostring(dist).."m"
                    ESP.Distances[player].Position = screenPos + Vector2.new(0, boxSizeY/2 + 10)
                    ESP.Distances[player].Visible = true
                else
                    ESP.Distances[player].Visible = false
                end
            else
                HideESP(player)
            end
        else
            HideESP(player)
        end
    end
end)

-- Player Added/Removing
Players.PlayerAdded:Connect(function(player)
    CreateESP(player)
end)
Players.PlayerRemoving:Connect(function(player)
    HideESP(player)
    if ESP.Highlights[player] then
        ESP.Highlights[player]:Destroy()
        ESP.Highlights[player] = nil
    end
end)

------------------------------------------------------
-- üå∏ ESP GUI Controls (Rayfield)
------------------------------------------------------
ESPTab:CreateSection("ESP TeamCheck")

ESPTab:CreateToggle({
    Name = "ESP ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ó‡∏µ‡∏°",
    CurrentValue = false,
    Flag = "ESPTeamCheck",
    Callback = function(Value)
        ESP.Settings.TeamCheck = Value
    end,
})

ESPTab:CreateSection("ESP Settings")

ESPTab:CreateToggle({
    Name = "ESP ‡∏Å‡∏£‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô",
    CurrentValue = false,
    Flag = "ESPBox",
    Callback = function(Value)
        ESP.Settings.Box = Value
    end,
})

ESPTab:CreateToggle({
    Name = "ESP ‡πÑ‡∏Æ‡πÑ‡∏•‡∏ï‡πå‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô",
    CurrentValue = false,
    Flag = "ESPHilight",
    Callback = function(Value)
        ESP.Settings.Highlight = Value
        for _, player in ipairs(Players:GetPlayers()) do
            UpdateHighlight(player)
        end
    end,
})

ESPTab:CreateToggle({
    Name = "ESP ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô",
    CurrentValue = false,
    Flag = "ESPName",
    Callback = function(Value)
        ESP.Settings.Name = Value
    end,
})

ESPTab:CreateToggle({
    Name = "ESP ‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô",
    CurrentValue = false,
    Flag = "ESPHealth",
    Callback = function(Value)
        ESP.Settings.Health = Value
    end,
})

ESPTab:CreateToggle({
    Name = "ESP ‡∏£‡∏∞‡∏¢‡∏∞",
    CurrentValue = false,
    Flag = "ESPDistance",
    Callback = function(Value)
        ESP.Settings.Distance = Value
    end,
})


-- üå∏ Settings Tab
local SettingsTab = Window:CreateTab("‚öôÔ∏è Settings")
local SectionSettings = SettingsTab:CreateSection("UI Settings")
